
services:
  mosquitto:
    image: eclipse-mosquitto:2
    container_name: mosquitto_tls
    restart: unless-stopped
    volumes:
      - ./mosquitto/config:/mosquitto/config
      - ./mosquitto/data:/mosquitto/data
      - ./mosquitto/log:/mosquitto/log
      - ./mosquitto/config/certs:/etc/ssl/certs
      - ./certs:/etc/letsencrypt
      - ./mosquitto/run:/run
    ports:
      - "8883:8883"
    environment:
      - DOMAIN=${DOMAIN}
      - EMAIL=${EMAIL}
    entrypoint: >
      sh -c '
        set -e;

        if [ -f /mosquitto/config/users.txt ] && [ -s /mosquitto/config/users.txt ]; then
          echo "üìÇ Generando archivo passwd desde users.txt..."
          rm -f /mosquitto/config/passwd
          touch /mosquitto/config/passwd
          chown root:root /mosquitto/config/passwd
          chmod 600 /mosquitto/config/passwd
          while IFS=":" read -r usr pwd || [ -n "$$usr" ]; do
            if [ -n "$$usr" ] && [ -n "$$pwd" ] && [ "$${usr:0:1}" != "#" ]; then
              echo "‚ûï Agregando usuario $$usr"
              mosquitto_passwd -b /mosquitto/config/passwd "$$usr" "$$pwd"
            fi
          done < /mosquitto/config/users.txt
          chown mosquitto:mosquitto /mosquitto/config/passwd
          chmod 600 /mosquitto/config/passwd
        else
          echo "‚ö†Ô∏è  users.txt no existe o est√° vac√≠o"
        fi
        if [ ! -s /mosquitto/config/mosquitto.conf ]; then
          echo "Creando el archivo de configuracion de mosquitto..."
          printf "%s\\n" \
            "persistence true" \
            "persistence_location /var/lib/mosquitto/" \
            "log_dest file /mosquitto/log/mosquitto.log" \
            "allow_anonymous false" \
            "listener 8883 0.0.0.0" \
            "require_certificate false" \
            "cafile /etc/ssl/certs/ISRG_Root_X1.pem" \
            "tls_version tlsv1.2" \
            "persistent_client_expiration 1h" \
            "acl_file /mosquitto/config/acl" \
            "password_file /mosquitto/config/passwd" \
            "max_connections -1" \
            "certfile /etc/letsencrypt/live/${DOMAIN}/fullchain.pem" \
            "keyfile /etc/letsencrypt/live/${DOMAIN}/privkey.pem" \
            > /mosquitto/config/mosquitto.conf;
        else
          echo "El archivo de configuracion de mosquitto ya existe, omitiendo su creacion"
        fi;
        while [ ! -f /etc/letsencrypt/live/${DOMAIN}/fullchain.pem ]; do
          echo "Esperando a que el certificado est√© disponible..."
          sleep 5
        done

        # Nuevo bloque de verificaci√≥n
        echo "‚úÖ Archivo passwd generado. Verificando existencia..."
        while [ ! -s /mosquitto/config/passwd ]; do
          echo "‚è≥ Esperando que el archivo passwd no est√© vac√≠o..."
          sleep 1
        done
        echo "‚úÖ Archivo passwd listo. Iniciando Mosquitto..."

        exec mosquitto -v -c /mosquitto/config/mosquitto.conf'
    networks:
      - mqtt_net

  certbot:
    image: certbot/certbot
    container_name: certbot_tls
    volumes:
      - ./certs:/etc/letsencrypt
    ports:
      - "80:80"
    entrypoint: >
      sh -c "
        DOMAIN=$DOMAIN
        EMAIL=$EMAIL
        if [ -f /etc/letsencrypt/live/$DOMAIN/fullchain.pem ]; then
          echo '‚úÖ Certificado ya existe. No se emitir√° uno nuevo.';
        elif [ -f /etc/letsencrypt/renewal/$DOMAIN.conf ]; then
          echo '‚ö†Ô∏è Certificado ya fue solicitado recientemente. Esperando renovaci√≥n autom√°tica.';
        else
          certbot certonly --standalone --agree-tos --no-eff-email --non-interactive --preferred-challenges http --domains $DOMAIN --email $EMAIL --deploy-hook 'chmod -R 644 /etc/letsencrypt/live /etc/letsencrypt/archive && chown -R 1883:1883 /etc/letsencrypt';
        fi
      "
    environment:
      - DOMAIN=${DOMAIN}
      - EMAIL=${EMAIL}
    networks:
      - mqtt_net


networks:
  mqtt_net:
    driver: bridge

 #     certonly --standalone --agree-tos --no-eff-email --staple-ocsp --preferred-challenges http -m ${EMAIL} -d ${DOMAIN}
